{"version":3,"sources":["assets/img/brand/Dino-cheerful-brand.png","assets/img/brand/argon-react-white.png","config/index.js","components/Sidebar/Sidebar.js","query/notification.js","hooks/index.js","common/index.js","query/user.js","views/examples/Login.js","query/uniqueBook.js","query/category.js","utils/index.js","views/examples/DinoDashboard/Image.js","query/upload.js","routes.js","views/examples/DinoDashboard/ProductPage.js","views/examples/DinoDashboard/AddProduct.js","views/examples/DinoDashboard/UpdateProduct.js","views/examples/DinoDashboard/UserPage.js","views/examples/DinoDashboard/UserDetailPage.js","views/examples/DinoDashboard/CategoryPage.js","views/examples/DinoDashboard/NotificationPage.js","views/examples/DinoDashboard/NotificationDetail.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","layouts/Auth.js","index.js"],"names":["module","exports","httpLink","createUploadLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","authMiddleware","ApolloLink","forward","a","setContext","headers","authorization","localStorage","getItem","refresh_token","Client","ApolloClient","cache","InMemoryCache","link","concat","Sidebar","React","Component","constructor","props","super","state","collapseOpen","toggleCollapse","this","setState","closeCollapse","createLinks","routes","map","prop","key","hide","NavItem","NavLink","to","layout","path","tag","NavLinkRRD","onClick","activeClassName","className","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","render","logo","navbarBrandProps","innerLink","Link","outterLink","href","target","Navbar","expand","id","Container","fluid","type","NavbarBrand","alt","imgAlt","src","imgSrc","Collapse","navbar","isOpen","Row","Col","xs","Form","InputGroup","Input","aria-label","placeholder","InputGroupAddon","addonType","InputGroupText","Nav","defaultProps","BOOK_ADMIN_NOTIFICATION","gql","GET_BOOK_NOTIFICATIONS","GET_BOOK_NOTIFICATION","SEEN_NOTIFICATION","Notification","useLocation","data","useSubscription","variables","userId","sessionStorage","useEffect","window","reload","message","info","receiveNotificationBookAdmin","description","Fragment","children","queryData","inputQuery","fetchPolicy","mutateData","mutate","mutation","LOGIN","GET_USERS","GET_USERS_BY_ID","Login","userNameRef","useRef","passwordRef","useState","checkLogin","setCheckLogin","current","value","removeItem","handleSubmit","e","preventDefault","email","password","then","login","user","role","setItem","token","refreshToken","success","catch","err","error","from","lg","md","Card","CardHeader","CardBody","onSubmit","FormGroup","autoComplete","innerRef","Button","color","GET_UNIQUE_BOOKS","GET_UNIQUE_BOOK","CREATE_UNIQUE_BOOK","UPDATE_UNIQUE_BOOK","DELETE_UNIQUE_BOOK","GET_CATEGORIES","CREATE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","formatDate","dateString","moment","format","Image","imageUrl","onDelete","actionDisplay","setActionDisplay","previewHover","setPreviewHover","removeHover","setRemoveHover","isModalVisible","setIsModalVisible","onPreview","style","display","padding","margin","width","height","position","transitionDelay","cursor","border","onMouseEnter","onMouseLeave","loading","top","left","background","transform","marginRight","viewBox","focusable","data-icon","fill","aria-hidden","d","marginLeft","title","visible","onOk","okText","onCancel","footer","backgroundImage","backgroundRepeat","backgroundSize","UPLOAD_MULTI_FILE","component","uniqueBooks","setUniqueBooks","categories","setCategories","category","setCategory","filter","setFilter","fetchCategories","dataCategories","console","log","fetchUniqueBooks","cancel","columns","dataIndex","fixed","slice","onFilter","record","images","image","index","objectFit","author","publisher","createdAt","updatedAt","text","product","size","onConfirm","confirmDelete","res","cancelText","Label","onChange","dataSource","elements","toLowerCase","includes","element","scroll","x","pagination","filters","sorter","extra","exact","year","numberOfReprint","setProduct","setImages","useMutation","onCompleted","tamp","uploadMultiFile","dt","url","onError","upload","handleCreate","dataCreate","handleChange","uploadImage","files","deleteImage","imagesTemp","splice","Math","random","length","htmlFor","sm","showSearch","optionFilterProp","handleSelectChange","filterOption","input","option","Option","productId","useParams","fetchBook","uniqueBook","handleUpdate","dataUpdate","config","uploadCloud","Promise","resolve","reject","file","formData","FormData","append","axios","post","result","users","setUsers","fetchData","roleTag","ADMIN","STORE","MEMBER","setUser","avatar","defaultValue","disabled","gender","phone","address","create","modalContent","setModalContent","for","plaintext","notifications","setNotifications","notificationsBookOfAdmin","seen","notification","setNotification","notificationBookOfAdmin","fontWeight","textAlign","offset","autoSize","minRows","maxRows","unsignedName","Admin","getRoutes","getBrandText","i","componentDidUpdate","document","documentElement","scrollTop","scrollingElement","refs","mainContent","require","ref","AdminNavbar","Auth","componentDidMount","body","classList","add","componentWillUnmount","remove","AuthNavbar","xmlns","preserveAspectRatio","version","y","points","ReactDOM","client","getElementById"],"mappings":"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","file":"static/js/main.f1d56ad7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dino-cheerful-brand.26b2f2cc.png\";","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","import { ApolloClient, ApolloLink, InMemoryCache, concat, split } from '@apollo/client';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nconst url = `https://serverdino.herokuapp.com`;\r\nconst httpLink = createUploadLink({ uri: `${url}/graphql` });\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `wss://serverdino.herokuapp.com/subscriptions`,\r\n  options: {\r\n    reconnect: true,\r\n  },\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\r\n  },\r\n  wsLink,\r\n  httpLink\r\n);\r\n\r\nconst authMiddleware = new ApolloLink(async (operation, forward) => {\r\n  operation.setContext({\r\n    headers: {\r\n      authorization: localStorage.getItem('token'),\r\n      refresh_token: localStorage.getItem('refreshToken'),\r\n      'Access-Control-Allow-Origin': '*',\r\n    },\r\n  });\r\n  return forward(operation);\r\n});\r\n\r\nexport const Client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: concat(authMiddleware, splitLink),\r\n});\r\n","import React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  // DropdownMenu,\n  // DropdownItem,\n  // UncontrolledDropdown,\n  // DropdownToggle,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  // Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// var ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false,\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false,\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      return prop.hide ? null : (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link,\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\",\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          {/* <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav> */}\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","import { gql } from '@apollo/client';\r\n\r\nexport const BOOK_ADMIN_NOTIFICATION = gql`\r\n  subscription receiveNotificationBookAdmin($userId: ID!) {\r\n    receiveNotificationBookAdmin(userId: $userId) {\r\n      id\r\n      title\r\n      description\r\n      seen\r\n      status\r\n      uniqueBook\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_BOOK_NOTIFICATIONS = gql`\r\n  query notificationsBookOfAdmin {\r\n    notificationsBookOfAdmin {\r\n      id\r\n      title\r\n      description\r\n      seen\r\n      status\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const GET_BOOK_NOTIFICATION = gql`\r\n  query notificationBookOfAdmin($id: ID!) {\r\n    notificationBookOfAdmin(id: $id) {\r\n      id\r\n      title\r\n      description\r\n      data {\r\n        name\r\n        images\r\n        year\r\n        numberOfReprint\r\n        publisher\r\n        category {\r\n          id\r\n          name\r\n        }\r\n        author\r\n        description\r\n      }\r\n      seen\r\n      status\r\n      uniqueBook {\r\n        id\r\n        name\r\n        images\r\n        year\r\n        numberOfReprint\r\n        publisher\r\n        author\r\n        description\r\n        category {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const SEEN_NOTIFICATION = gql`\r\n  mutation seenNotificationBookAdmin($id: ID!) {\r\n    seenNotificationBookAdmin(id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { useSubscription } from '@apollo/client';\r\nimport { BOOK_ADMIN_NOTIFICATION } from 'query/notification';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { message } from 'antd';\r\n\r\nconst Notification = (props) => {\r\n  const location = useLocation();\r\n  const { data } = useSubscription(BOOK_ADMIN_NOTIFICATION, {\r\n    variables: {\r\n      userId: sessionStorage.getItem('userId'),\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (location.pathname === '/admin/manage-notification') {\r\n        window.location.reload();\r\n      } else {\r\n        message.info(data.receiveNotificationBookAdmin.description);\r\n      }\r\n    }\r\n    return () => {\r\n      // cleanup;\r\n    };\r\n  }, [data]);\r\n  return <React.Fragment>{props.children}</React.Fragment>;\r\n};\r\nexport default Notification;\r\n","import { Client } from \"../config\";\r\n\r\nexport const queryData = async (\r\n  inputQuery,\r\n  variables = {},\r\n  fetchPolicy = \"no-cache\"\r\n) => {\r\n  const data = await Client.query({\r\n    query: inputQuery,\r\n    variables,\r\n    fetchPolicy,\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const mutateData = async (\r\n  inputQuery,\r\n  variables = {},\r\n  fetchPolicy = \"no-cache\"\r\n) => {\r\n  const data = await Client.mutate({\r\n    mutation: inputQuery,\r\n    variables,\r\n    fetchPolicy,\r\n  });\r\n  return data;\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n  query login(\r\n    $phone: String\r\n    $password: String!\r\n    $type: Boolean!\r\n    $email: String\r\n  ) {\r\n    login(phone: $phone, password: $password, type: $type, email: $email) {\r\n      user {\r\n        id\r\n        name\r\n        phone\r\n        role\r\n        avatar\r\n        email\r\n        address\r\n      }\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\nexport const REGISTER = gql`\r\n  mutation register($newUser: UserInput!, $type: Boolean!) {\r\n    register(newUser: $newUser, type: $type) {\r\n      message\r\n    }\r\n  }\r\n`;\r\nexport const VERIFY = gql`\r\n  query verify($phone: String, $otp: String!, $type: Boolean!, $email: String) {\r\n    verify(phone: $phone, otp: $otp, type: $type, email: $email) {\r\n      message\r\n    }\r\n  }\r\n`;\r\nexport const GET_USER = gql`\r\n  query profile {\r\n    profile {\r\n      id\r\n      name\r\n      phone\r\n      role\r\n      avatar\r\n      email\r\n      address\r\n      likes {\r\n        id\r\n        amount\r\n        price\r\n        images\r\n        book {\r\n          id\r\n          name\r\n          images\r\n        }\r\n        name\r\n        sold\r\n      }\r\n      store {\r\n        id\r\n        name\r\n        description\r\n      }\r\n      cart {\r\n        book {\r\n          id\r\n          amount\r\n          price\r\n          images\r\n          book {\r\n            name\r\n            images\r\n          }\r\n          name\r\n        }\r\n        amount\r\n        price\r\n      }\r\n      notifications {\r\n        order {\r\n          id\r\n          title\r\n          description\r\n          order {\r\n            id\r\n          }\r\n          seen\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        book {\r\n          id\r\n          title\r\n          description\r\n          commentBook {\r\n            id\r\n            content\r\n            book {\r\n              id\r\n            }\r\n            author {\r\n              name\r\n            }\r\n            type\r\n            createdAt\r\n          }\r\n          seen\r\n          createdAt\r\n        }\r\n        post {\r\n          id\r\n          title\r\n          description\r\n          commentPost {\r\n            id\r\n            content\r\n            post {\r\n              id\r\n            }\r\n            author {\r\n              name\r\n            }\r\n            type\r\n            createdAt\r\n          }\r\n          seen\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_CART = gql`\r\n  mutation updateCart($dataCart: [DetailUpdate!]!) {\r\n    updateCart(dataCart: $dataCart) {\r\n      book {\r\n        id\r\n        amount\r\n        price\r\n        images\r\n        book {\r\n          name\r\n          images\r\n        }\r\n        name\r\n      }\r\n      amount\r\n      price\r\n    }\r\n  }\r\n`;\r\nexport const REFRESH_TOKEN = gql`\r\n  query refreshToken {\r\n    user {\r\n      id\r\n      name\r\n      phone\r\n      role\r\n      avatar\r\n      email\r\n      address\r\n      likes {\r\n        id\r\n        amount\r\n        price\r\n        images\r\n        book {\r\n          id\r\n          name\r\n          images\r\n        }\r\n        name\r\n        sold\r\n      }\r\n      cart {\r\n        book {\r\n          id\r\n          amount\r\n          price\r\n          images\r\n          book {\r\n            id\r\n            name\r\n            images\r\n          }\r\n          name\r\n        }\r\n        amount\r\n        price\r\n      }\r\n      notifications {\r\n        order {\r\n          id\r\n          title\r\n          description\r\n          order {\r\n            id\r\n          }\r\n          seen\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        book {\r\n          id\r\n          title\r\n          description\r\n          commentBook {\r\n            id\r\n            content\r\n            book {\r\n              id\r\n            }\r\n            author {\r\n              name\r\n            }\r\n            type\r\n            createdAt\r\n          }\r\n          seen\r\n          createdAt\r\n        }\r\n        post {\r\n          id\r\n          title\r\n          description\r\n          commentPost {\r\n            id\r\n            content\r\n            post {\r\n              id\r\n            }\r\n            author {\r\n              name\r\n            }\r\n            type\r\n            createdAt\r\n          }\r\n          seen\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n    token\r\n    refreshToken\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_INFO = gql`\r\n  mutation updateUserInfo($userUpdate: UserUpdate!) {\r\n    updateUserInfo(userUpdate: $userUpdate) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_TO_LIKE = gql`\r\n  mutation addToLike($id: ID!) {\r\n    addToLike(id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;\r\nexport const REMOVE_TO_LIKE = gql`\r\n  mutation removeToLike($id: ID!) {\r\n    removeToLike(id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FORGOT_PASSWORD = gql`\r\n  query forgotPassword($email: String, $phone: String, $type: Boolean!) {\r\n    forgotPassword(email: $email, phone: $phone, type: $type) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHECK_OTP_FORGOT = gql`\r\n  query checkOTPForgot(\r\n    $email: String\r\n    $phone: String\r\n    $type: Boolean!\r\n    $otp: String!\r\n  ) {\r\n    checkOTPForgot(email: $email, phone: $phone, type: $type, otp: $otp)\r\n  }\r\n`;\r\n\r\nexport const RESET_PASSWORD = gql`\r\n  mutation resetPassword($token: String!, $password: String!) {\r\n    resetPassword(token: $token, password: $password) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USERS = gql`\r\n  query users {\r\n    users {\r\n      id\r\n      name\r\n      email\r\n      phone\r\n      role\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USERS_BY_ID = gql`\r\n  query user($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      name\r\n      email\r\n      phone\r\n      address\r\n      avatar\r\n      role\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { queryData } from '../../common';\r\nimport { LOGIN } from '../../query/user';\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Col,\r\n} from 'reactstrap';\r\nimport { message } from 'antd';\r\nimport { useNotification } from 'hooks';\r\n\r\nfunction Login() {\r\n  const userNameRef = React.useRef(null);\r\n  const passwordRef = React.useRef(null);\r\n  const [checkLogin, setCheckLogin] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    userNameRef.current.value = 'huydoan@gmail.com';\r\n    passwordRef.current.value = 'ta210402';\r\n    sessionStorage.removeItem('isLogged');\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    queryData(LOGIN, {\r\n      email: userNameRef.current.value,\r\n      password: passwordRef.current.value,\r\n      type: false,\r\n    })\r\n      .then(({ data: { login } }) => {\r\n        // console.log(login);\r\n        if (login.user.role === 'ADMIN') {\r\n          sessionStorage.setItem('isLogged', true);\r\n          sessionStorage.setItem('userId', login.user.id);\r\n          localStorage.setItem('token', login.token);\r\n          // useNotification(login.user.id);\r\n          localStorage.setItem('refreshToken', login.refreshToken);\r\n          message.success('Đăng nhập thành công');\r\n          setCheckLogin(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n        message.error('Đăng nhập thất bại');\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {checkLogin ? <Redirect from=\"*\" to=\"/admin/index\"></Redirect> : null}\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardHeader className=\"bg-transparent text-center\">\r\n            <h4 className=\"text-uppercase ls-1 mb-1\">Sign in</h4>\r\n          </CardHeader>\r\n          <CardBody className=\"px-lg-5 py-lg-5\">\r\n            <Form role=\"form\" onSubmit={(e) => handleSubmit(e)}>\r\n              <FormGroup className=\"mb-3\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-email-83\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    autoComplete=\"new-email\"\r\n                    innerRef={userNameRef}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-lock-circle-open\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"new-password\"\r\n                    innerRef={passwordRef}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <div className=\"text-center\">\r\n                <Button className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                  Sign in\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_UNIQUE_BOOKS = gql`\r\n  query uniqueBooks {\r\n    uniqueBooks {\r\n      id\r\n      name\r\n      images\r\n      year\r\n      numberOfReprint\r\n      publisher\r\n      author\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UNIQUE_BOOK = gql`\r\n  query uniqueBook($id: ID!) {\r\n    uniqueBook(id: $id) {\r\n      name\r\n      images\r\n      year\r\n      numberOfReprint\r\n      publisher\r\n      author\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_UNIQUE_BOOK = gql`\r\n  mutation createUniqueBook($dataCreate: UniqueBookCreate!) {\r\n    createUniqueBook(dataCreate: $dataCreate) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_UNIQUE_BOOK = gql`\r\n  mutation updateUniqueBook($dataUpdate: UniqueBookUpdate!, $id: ID!) {\r\n    updateUniqueBook(dataUpdate: $dataUpdate, id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_UNIQUE_BOOK = gql`\r\n  mutation deleteUniqueBook($id: ID!) {\r\n    deleteUniqueBook(id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CATEGORIES = gql`\r\n  query categories {\r\n    categories {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_BOOKS_CATEGORIES = gql`\r\n  query booksByCategory($id: ID!) {\r\n    booksByCategory(id: $id) {\r\n      id\r\n      name\r\n      book {\r\n        id\r\n        name\r\n        images\r\n        year\r\n        numberOfReprint\r\n        publisher\r\n        category {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      store {\r\n        id\r\n        name\r\n        avatar\r\n      }\r\n      amount\r\n      price\r\n      sold\r\n      name\r\n      images\r\n      year\r\n      numberOfReprint\r\n      publisher\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_CATEGORY = gql`\r\n  mutation createCategory($name: String!) {\r\n    createCategory(name: $name) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_CATEGORY = gql`\r\n  mutation updateCategory($id: String!, $name: String) {\r\n    updateCategory(id: $id, name: $name) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n// t de nham me cai type id roi\r\nexport const DELETE_CATEGORY = gql`\r\n  mutation deleteCategory($id: ID!) {\r\n    deleteCategory(id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import * as moment from \"moment\";\r\n\r\nconst formatDate = (dateString) => {\r\n  return moment(dateString).format(\"DD-MM-YYYY hh:mm:ss\");\r\n};\r\n\r\nexport default formatDate;\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  // message,\r\n  // Popconfirm,\r\n  // Select,\r\n  // Tag,\r\n  // Upload,\r\n  // Form as FormAntd,\r\n} from \"antd\";\r\nconst Image = ({ imageUrl, onDelete }) => {\r\n  const [actionDisplay, setActionDisplay] = React.useState(false);\r\n  const [previewHover, setPreviewHover] = React.useState(false);\r\n  const [removeHover, setRemoveHover] = React.useState(false);\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n\r\n  const onCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onPreview = async () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"inline-block\",\r\n        padding: \"10px\",\r\n        margin: \"5px\",\r\n        width: \"170px\",\r\n        height: \"170px\",\r\n        position: \"relative\",\r\n        transitionDelay: \"0.3s\",\r\n        cursor: \"pointer\",\r\n        border: \"1px solid #d9d9d9\",\r\n      }}\r\n      onMouseEnter={() => setActionDisplay(true)}\r\n      onMouseLeave={() => setActionDisplay(false)}\r\n    >\r\n      <img\r\n        src={imageUrl}\r\n        alt=\"cannotLoading\"\r\n        width=\"150\"\r\n        height=\"150\"\r\n        loading=\"lazy\"\r\n      ></img>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          display: !actionDisplay ? \"none\" : \"block\",\r\n          background: \"rgba(0,0,0,0.4)\",\r\n          transitionDelay: \"0.3s\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          display: !actionDisplay ? \"none\" : \"inline-block\",\r\n        }}\r\n      >\r\n        <span style={{ marginRight: \"5px\" }}>\r\n          <svg\r\n            viewBox=\"64 64 896 896\"\r\n            focusable=\"false\"\r\n            data-icon=\"eye\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            fill={\r\n              previewHover\r\n                ? \"rgba(255, 255, 255, 1)\"\r\n                : \"rgba(255, 255, 255, 0.8)\"\r\n            }\r\n            aria-hidden=\"true\"\r\n            onMouseEnter={() => setPreviewHover(true)}\r\n            onMouseLeave={() => setPreviewHover(false)}\r\n            onClick={onPreview}\r\n          >\r\n            <path d=\"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\"></path>\r\n          </svg>\r\n        </span>\r\n        <span style={{ marginLeft: \"5px\" }}>\r\n          <svg\r\n            viewBox=\"64 64 896 896\"\r\n            focusable=\"false\"\r\n            data-icon=\"delete\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            fill={\r\n              removeHover\r\n                ? \"rgba(255, 255, 255, 1)\"\r\n                : \"rgba(255, 255, 255, 0.8)\"\r\n            }\r\n            aria-hidden=\"true\"\r\n            onMouseEnter={() => setRemoveHover(true)}\r\n            onMouseLeave={() => setRemoveHover(false)}\r\n            onClick={onDelete}\r\n          >\r\n            <path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <Modal\r\n        title=\"Image\"\r\n        visible={isModalVisible}\r\n        onOk={false}\r\n        okText={null}\r\n        onCancel={onCancel}\r\n        width={548}\r\n        footer={null}\r\n      >\r\n        {\" \"}\r\n        <div\r\n          style={{\r\n            width: 500,\r\n            height: 500,\r\n            backgroundImage: \"url(\" + imageUrl + \")\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        ></div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import {gql} from '@apollo/client';\r\n\r\nexport const UPLOAD_SINGLE_FILE = gql`\r\n  mutation uploadSingleFile($file: Upload!) {\r\n    uploadSingleFile(file: $file) {\r\n      url\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPLOAD_MULTI_FILE = gql`\r\n  mutation uploadMultiFile($files: [Upload!]!) {\r\n    uploadMultiFile(files: $files) {\r\n      id\r\n      url\r\n      name\r\n      asset_id\r\n      public_id\r\n    }\r\n  }\r\n`;\r\n","import Login from 'views/examples/Login';\r\nimport ProductPage from 'views/examples/DinoDashboard/ProductPage';\r\nimport CategoryPage from 'views/examples/DinoDashboard/CategoryPage';\r\nimport UserPage from 'views/examples/DinoDashboard/UserPage';\r\nimport UserDetailPage from 'views/examples/DinoDashboard/UserDetailPage';\r\nimport AddProduct from 'views/examples/DinoDashboard/AddProduct';\r\nimport UpdateProduct from 'views/examples/DinoDashboard/UpdateProduct';\r\nimport NotificationPage from 'views/examples/DinoDashboard/NotificationPage';\r\nimport NotificationDetailPage from 'views/examples/DinoDashboard/NotificationDetail';\r\nvar routes = [\r\n  {\r\n    path: '/manage-product',\r\n    name: 'Product',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: ProductPage,\r\n    layout: '/admin',\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/manage-product/add',\r\n    name: 'Product',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: AddProduct,\r\n    layout: '/admin',\r\n    hide: true,\r\n  },\r\n  {\r\n    path: '/manage-product/:productId',\r\n    name: 'Product',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: UpdateProduct,\r\n    layout: '/admin',\r\n    hide: true,\r\n  },\r\n  {\r\n    path: '/manage-user',\r\n    name: 'User',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: UserPage,\r\n    layout: '/admin',\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/manage-user/:userId',\r\n    name: 'User',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: UserDetailPage,\r\n    layout: '/admin',\r\n    hide: true,\r\n  },\r\n  {\r\n    path: '/manage-category',\r\n    name: 'Category',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: CategoryPage,\r\n    layout: '/admin',\r\n  },\r\n  {\r\n    path: '/manage-notification',\r\n    name: 'Notification',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: NotificationPage,\r\n    layout: '/admin',\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/manage-notification/:id',\r\n    name: 'Notification',\r\n    icon: 'ni ni-bullet-list-67 text-red',\r\n    component: NotificationDetailPage,\r\n    layout: '/admin',\r\n    exact: true,\r\n    hide: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Logout',\r\n    icon: 'ni ni-circle-08 text-pink',\r\n    component: Login,\r\n    layout: '/auth',\r\n  },\r\n];\r\nexport default routes;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { GET_UNIQUE_BOOKS, DELETE_UNIQUE_BOOK } from \"../../../query/uniqueBook\";\r\nimport { GET_CATEGORIES } from \"../../../query/category\";\r\nimport { mutateData, queryData } from \"../../../common\";\r\nimport { message, Popconfirm, Table as TableAntd, Space } from \"antd\";\r\nimport formatDate from \"../../../utils/index.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ProductPage() {\r\n  const [uniqueBooks, setUniqueBooks] = React.useState([]);\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [category, setCategory] = React.useState(\"all\");\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const fetchCategories = async () => {\r\n    queryData(GET_CATEGORIES)\r\n      .then(({ data: { categories: dataCategories } }) => {\r\n        console.log(dataCategories);\r\n        setCategories(dataCategories);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const fetchUniqueBooks = async () => {\r\n    queryData(GET_UNIQUE_BOOKS)\r\n      .then(({ data: { uniqueBooks } }) => {\r\n        console.log(uniqueBooks);\r\n        setUniqueBooks(uniqueBooks);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchCategories();\r\n    fetchUniqueBooks();\r\n  }, []);\r\n\r\n  function confirmDelete(id) {\r\n    mutateData(DELETE_UNIQUE_BOOK, {id: id})\r\n    .then((res) => {\r\n      message.success(\"Delete successful.\");\r\n      fetchUniqueBooks();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      message.error(\"Delete failed.\");\r\n    });\r\n  }\r\n\r\n  function cancel(e) {}\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      render: (id) => <strong>{id.slice(-8)}</strong>,\r\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 250,\r\n      render: (name) => <strong>{name}</strong>,\r\n    },\r\n    {\r\n      title: \"Images\",\r\n      dataIndex: \"images\",\r\n      key: \"images\",\r\n      width: 500,\r\n      render: (images) => (\r\n        <div>\r\n          {images.map((image, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"inline-block\",\r\n                padding: \"5px\",\r\n                margin: \"5px\",\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                cursor: \"pointer\",\r\n                border: \"1px solid #d9d9d9\",\r\n              }}\r\n            >\r\n              <img\r\n                src={image}\r\n                alt=\"cannotLoading\"\r\n                width=\"90\"\r\n                height=\"90\"\r\n                loading=\"lazy\"\r\n                style={{ objectFit: \"cover\" }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Author\",\r\n      dataIndex: \"author\",\r\n      key: \"author\",\r\n      width: 250,\r\n      render: (author) => <strong>{author}</strong>,\r\n    },\r\n    {\r\n      title: \"Publisher\",\r\n      dataIndex: \"publisher\",\r\n      key: \"publisher\",\r\n      width: 250,\r\n      render: (publisher) => <strong>{publisher}</strong>,\r\n    },\r\n    {\r\n      title: \"Category\",\r\n      dataIndex: \"category\",\r\n      key: \"category\",\r\n      width: 250,\r\n      render: (category) => category?.name,\r\n    },\r\n\r\n    {\r\n      title: \"Created At\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      render: (createdAt) => formatDate(createdAt),\r\n    },\r\n    {\r\n      title: \"Updated At\",\r\n      dataIndex: \"updatedAt\",\r\n      key: \"updatedAt\",\r\n      render: (updatedAt) => formatDate(updatedAt),\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 150,\r\n      render: (text, product) => (\r\n        <Space size=\"small\" key={product.id}>\r\n          <Link to={\"/admin/manage-product/\" + product.id}>\r\n            <Button size=\"sm\">View</Button>\r\n          </Link>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this product?\"\r\n            onConfirm={() => confirmDelete(product.id)}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button color=\"danger\" size=\"sm\">\r\n              Delete\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const filterCallback = (elements) => {\r\n    return (\r\n      elements.name.toLowerCase().includes(filter) ||\r\n      elements.id.toLowerCase().includes(filter)\r\n    );\r\n  };\r\n\r\n  const filterCategory = (element) => {\r\n    return category === \"all\" || element.category.id === category;\r\n  };\r\n\r\n  function onChange(pagination, filters, sorter, extra) {\r\n    console.log(\"params\", pagination, filters, sorter, extra);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Products</h2>\r\n                    <Link to=\"/admin/manage-product/add\">\r\n                      <Button color=\"primary\" size=\"md\">\r\n                        Create\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <Label>\r\n                      <strong>Category</strong>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"category\"\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                      <option value=\"all\">All</option>\r\n                      {categories.map((e) => (\r\n                        <option value={e.id} key={e.id}>{e.name}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <Label>\r\n                      <strong>Search</strong>\r\n                    </Label>\r\n\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter id or name to find\"\r\n                      id=\"filterName\"\r\n                      value={filter}\r\n                      onChange={(e) => setFilter(e.target.value)}\r\n                    ></Input>\r\n                  </div>\r\n                  {/* <div className=\"col text-right\">\r\n                    <Link to=\"/admin/manage-product/add\">\r\n                      <Button color=\"primary\" size=\"sm\">\r\n                        Create\r\n                      </Button>\r\n                    </Link>\r\n                  </div> */}\r\n                </Row>\r\n              </CardHeader>\r\n              <TableAntd\r\n                columns={columns}\r\n                dataSource={uniqueBooks\r\n                  .filter(filterCallback)\r\n                  .filter(filterCategory)}\r\n                scroll={{ x: 2000 }}\r\n                onChange={onChange}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {useMutation} from '@apollo/client';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport { message, Select} from \"antd\";\r\nimport Image from \"./Image\";\r\nimport { GET_CATEGORIES } from \"../../../query/category\";\r\nimport { CREATE_UNIQUE_BOOK } from \"../../../query/uniqueBook\";\r\nimport {UPLOAD_MULTI_FILE} from '../../../query/upload';\r\nimport { queryData, mutateData } from \"../../../common\";\r\n\r\nexport default function ProductAddPage() {\r\n  const [product, setProduct] = React.useState({\r\n    name: \"Duy Quang\",\r\n    year: \"1996\",\r\n    description: \"Một thằng già nghèo khỗ, một con đĩ cô đơn đang trên hành trình của mình.\",\r\n    numberOfReprint: 1,\r\n    publisher: 'NBX Quang Nguyen',\r\n    author: 'Duy Quang',\r\n  });\r\n  const [images, setImages] = React.useState([\r\n    \"https://res.cloudinary.com/thaovan/image/upload/v1611683329/Dinosuar_shop/products/hkfpsyhgvuhhjdbp3p9m.jpg\",\r\n  ]);\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [categories, setCategories] = React.useState([]);\r\n\r\n\r\n  const fetchCategories = async () => {\r\n    queryData(GET_CATEGORIES)\r\n      .then(({ data: { categories: dataCategories } }) => {\r\n        console.log(dataCategories);\r\n        setCategories(dataCategories);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const [upload] = useMutation(UPLOAD_MULTI_FILE, {\r\n    onCompleted: (data) => {\r\n      const tamp = data.uploadMultiFile.map((dt) => dt.url);\r\n      setImages([...images, ...tamp]);\r\n    },\r\n    onError: (err) => {\r\n      console.log('upload images error', err);\r\n    },\r\n  });\r\n\r\n  const fillOptions = (values) => {\r\n    return values.map((value) => (\r\n      <Select.Option key={value.id} value={value.id}>\r\n        {value.name}\r\n      </Select.Option>\r\n    ));\r\n  };\r\n\r\n\r\n  const handleCreate = async () => {\r\n    mutateData(CREATE_UNIQUE_BOOK, {dataCreate: {...product, images: images, category: category}})\r\n      .then((res) => {\r\n        message.success(\"Create successful.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        message.error(\"Create failed.\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    // console.log(e.target.value);\r\n    setProduct({ ...product, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (value, setState) => {\r\n    setState(value);\r\n  };\r\n\r\n\r\n  React.useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"images\", images);\r\n  }, [images]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"Re-render\");\r\n  });\r\n\r\n  const uploadImage = async (e) => {\r\n    e.preventDefault();\r\n    const files = e.target.files;\r\n    console.log(files);\r\n    try {\r\n      // const config = {\r\n      //   headers: {\r\n      //     \"Content-Type\": \"multipart/form-data\",\r\n      //   },\r\n      // };\r\n      // const uploadCloud = (files) =>\r\n      //   new Promise(async (resolve, reject) => {\r\n      //     const file = files[0];\r\n      //     let formData = new FormData();\r\n      //     formData.append(\"file\", file);\r\n      //     const res = await axios.post(\r\n      //       \"http://localhost:3001/api/upload_single\",\r\n      //       formData,\r\n      //       config\r\n      //     );\r\n      //     resolve(res.data.url);\r\n      //   })\r\n      //     .then((result) => result)\r\n      //     .catch((err) => console.log(err));\r\n      // const data = await uploadCloud(files);\r\n      // console.log(data);\r\n      // setImages([...images, data]);\r\n      upload({\r\n        variables: {\r\n          files,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteImage = (index) => () => {\r\n    const imagesTemp = [...images];\r\n    imagesTemp.splice(index, 1);\r\n    setImages(imagesTemp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Thêm sản phẩm</h2>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <Container fluid>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>Hình ảnh</Label>\r\n                    <div>\r\n                      {images.map((image, index) => (\r\n                        <Image\r\n                          imageUrl={image}\r\n                          key={Math.random() * 1000 + \"\"}\r\n                          onDelete={deleteImage(index)}\r\n                        />\r\n                      ))}\r\n                      {images.length < 4 ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"170px\",\r\n                            height: \"170px\",\r\n                            margin: \"0 5px\",\r\n                            position: \"relative\",\r\n                            display: \"inline-block\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            type=\"file\"\r\n                            id=\"file\"\r\n                            name=\"file\"\r\n                            onChange={uploadImage}\r\n                            className=\"inputFile\"\r\n                          />\r\n                          <label htmlFor=\"file\">+ Tải lên</label>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"name\">Tên sách</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Nhập tên sách\"\r\n                      value={product.name ? product.name : \"\"}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={4}>\r\n                        <Label htmlFor=\"year\">Năm xuất bản</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"year\"\r\n                          id=\"year\"\r\n                          placeholder=\"Nhập năm\"\r\n                          value={product.year ? product.year : \"\"}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={4}>\r\n                        <Label htmlFor=\"numberOfReprint\">Số lần tái bản</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"numberOfReprint\"\r\n                          id=\"numberOfReprint\"\r\n                          placeholder=\"Nhập số lần tái bản\"\r\n                          value={product.numberOfReprint ? product.numberOfReprint : 0}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={4}>\r\n                        <Label htmlFor=\"category\">Thể loại</Label>\r\n                        <Select\r\n                          id=\"category\"\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder=\"Select a category\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={(value) =>\r\n                            handleSelectChange(value, setCategory)\r\n                          }\r\n                          value={category}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {fillOptions(categories)}\r\n                        </Select>\r\n                      </Col>\r\n                      \r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={6}>\r\n                        <Label htmlFor=\"author\">Tác giả</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"author\"\r\n                          id=\"author\"\r\n                          placeholder=\"Nhập tác giả\"\r\n                          value={product.author ? product.author : ''}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={6}>\r\n                        <Label htmlFor=\"publisher\">Nhà xuất bản</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"publisher\"\r\n                          id=\"publisher\"\r\n                          placeholder=\"Nhập nhà xuất bản\"\r\n                          value={product.publisher ? product.publisher : ''}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"description\">Mô tả</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"text\"\r\n                      id=\"description\"\r\n                      placeholder=\"Enter product description\"\r\n                      value={product.description}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Button onClick={handleCreate}>Tạo</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n              </Container>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport Image from \"./Image\";\r\n\r\nimport {\r\n  // Modal,\r\n  message,\r\n  // Popconfirm,\r\n  Select,\r\n  // Tag,\r\n  // Form as FormAntd,\r\n} from \"antd\";\r\nimport { GET_CATEGORIES } from \"../../../query/category\";\r\nimport {GET_UNIQUE_BOOK , UPDATE_UNIQUE_BOOK } from \"../../../query/uniqueBook\";\r\nimport { queryData, mutateData } from \"../../../common\";\r\n\r\nexport default function ProductUpdatePage() {\r\n  const { productId } = useParams();\r\n  console.log(productId);\r\n  const [product, setProduct] = React.useState({\r\n    name: \"Duy Quang\",\r\n    year: \"1996\",\r\n    description: \"Một thằng già nghèo khỗ, một con đĩ cô đơn đang trên hành trình của mình.\",\r\n    numberOfReprint: 1,\r\n    publisher: 'NBX Quang Nguyen',\r\n    author: 'Duy Quang',\r\n  });\r\n  const [images, setImages] = React.useState([\r\n    \"https://res.cloudinary.com/thaovan/image/upload/v1611683329/Dinosuar_shop/products/hkfpsyhgvuhhjdbp3p9m.jpg\",\r\n  ]);\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [categories, setCategories] = React.useState([]);\r\n\r\n\r\n  const fetchBook = async () => {\r\n    queryData(GET_UNIQUE_BOOK, {id: productId})\r\n      .then(({ data: { uniqueBook} }) => {\r\n        setProduct({...uniqueBook});\r\n        setImages(uniqueBook.images);\r\n        setCategory(uniqueBook.category.id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  const fetchCategories = async () => {\r\n    queryData(GET_CATEGORIES)\r\n      .then(({ data: { categories: dataCategories } }) => {\r\n        console.log(dataCategories);\r\n        setCategories(dataCategories);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const fillOptions = (values) => {\r\n    return values.map((value) => (\r\n      <Select.Option key={value.id} value={value.id}>\r\n        {value.name}\r\n      </Select.Option>\r\n    ));\r\n  };\r\n\r\n\r\n  const handleUpdate = async () => {\r\n    console.log({...product, images: images, category: category});\r\n    mutateData(UPDATE_UNIQUE_BOOK, {dataUpdate: {\r\n      name: product.name,\r\n      numberOfReprint: +product.numberOfReprint,\r\n      author: product.author,\r\n      year: product.year,\r\n      description: product.description,\r\n      publisher: product.publisher,\r\n      images: images,\r\n      category: category\r\n    }, id: productId})\r\n      .then((res) => {\r\n        message.success(\"Update successful.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        message.error(\"Update failed.\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    // console.log(e.target.value);\r\n    setProduct({ ...product, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (value, setState) => {\r\n    setState(value);\r\n  };\r\n\r\n\r\n  React.useEffect(() => {\r\n    fetchBook();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"images\", images);\r\n  }, [images]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"Re-render\");\r\n  });\r\n\r\n  const uploadImage = async (e) => {\r\n    e.preventDefault();\r\n    const files = e.target.files;\r\n    console.log(files);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const uploadCloud = (files) =>\r\n        new Promise(async (resolve, reject) => {\r\n          const file = files[0];\r\n          let formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          const res = await axios.post(\r\n            \"http://localhost:3001/api/upload_single\",\r\n            formData,\r\n            config\r\n          );\r\n          resolve(res.data.url);\r\n        })\r\n          .then((result) => result)\r\n          .catch((err) => console.log(err));\r\n      const data = await uploadCloud(files);\r\n      console.log(data);\r\n      setImages([...images, data]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteImage = (index) => () => {\r\n    const imagesTemp = [...images];\r\n    imagesTemp.splice(index, 1);\r\n    setImages(imagesTemp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Thông tin sách</h2>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <Container fluid>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>Hình ảnh</Label>\r\n                    <div>\r\n                      {images.map((image, index) => (\r\n                        <Image\r\n                          imageUrl={image}\r\n                          key={Math.random() * 1000 + \"\"}\r\n                          onDelete={deleteImage(index)}\r\n                        />\r\n                      ))}\r\n                      {images.length < 4 ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"170px\",\r\n                            height: \"170px\",\r\n                            margin: \"0 5px\",\r\n                            position: \"relative\",\r\n                            display: \"inline-block\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            type=\"file\"\r\n                            id=\"file\"\r\n                            name=\"file\"\r\n                            onChange={uploadImage}\r\n                            className=\"inputFile\"\r\n                          />\r\n                          <label htmlFor=\"file\">+ Tải lên</label>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"name\">Tên sách</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Nhập tên sách\"\r\n                      value={product.name ? product.name : \"\"}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={4}>\r\n                        <Label htmlFor=\"year\">Năm xuất bản</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"year\"\r\n                          id=\"year\"\r\n                          placeholder=\"Nhập năm\"\r\n                          value={product.year ? product.year : \"\"}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={4}>\r\n                        <Label htmlFor=\"numberOfReprint\">Số lần tái bản</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"numberOfReprint\"\r\n                          id=\"numberOfReprint\"\r\n                          placeholder=\"Nhập số lần tái bản\"\r\n                          value={product.numberOfReprint ? product.numberOfReprint : 0}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={4}>\r\n                        <Label htmlFor=\"category\">Thể loại</Label>\r\n                        <Select\r\n                          id=\"category\"\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder=\"Select a category\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={(value) =>\r\n                            handleSelectChange(value, setCategory)\r\n                          }\r\n                          value={category}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {fillOptions(categories)}\r\n                        </Select>\r\n                      </Col>\r\n                      \r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={6}>\r\n                        <Label htmlFor=\"author\">Tác giả</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"author\"\r\n                          id=\"author\"\r\n                          placeholder=\"Nhập tác giả\"\r\n                          value={product.author ? product.author : ''}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={6}>\r\n                        <Label htmlFor=\"publisher\">Nhà xuất bản</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"publisher\"\r\n                          id=\"publisher\"\r\n                          placeholder=\"Nhập nhà xuất bản\"\r\n                          value={product.publisher ? product.publisher : ''}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"description\">Mô tả</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"text\"\r\n                      id=\"description\"\r\n                      placeholder=\"Enter product description\"\r\n                      value={product.description}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Button onClick={handleUpdate}>Cập nhật</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n              </Container>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  CardHeader,\r\n  Button,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { GET_USERS } from \"../../../query/user\";\r\nimport { queryData } from \"../../../common\";\r\nimport { Table as TableAntd, Popconfirm, message, Space, Tag } from \"antd\";\r\nimport formatDate from \"../../../utils/index.js\";\r\n\r\nexport default function UserPage() {\r\n  const [users, setUsers] = React.useState([]);\r\n  const [filter, setFilter] = React.useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    queryData(GET_USERS)\r\n      .then(({ data: { users } }) => {\r\n        console.log(users);\r\n        setUsers(users);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function cancel(e) {}\r\n  function confirmDelete(id) {\r\n    message.error(\"Delete failed.\");\r\n    // axios\r\n    //   .delete(\"http://localhost:3001/user/delete/\" + id)\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //     message.success(\"Delete successful.\");\r\n    //     fetchData();\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //     message.error(\"Delete failed.\");\r\n    //   });\r\n  }\r\n  const roleTag = {\r\n    ADMIN: \"warning\",\r\n    STORE: \"processing\",\r\n    MEMBER: \"success\",\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      render: (id) => (\r\n        <Link to={\"/admin/manage-user/\" + id}>{id.slice(-8)}</Link>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      key: \"role\",\r\n      render: (role) => <Tag color={roleTag[role]}>{role}</Tag>,\r\n    },\r\n    {\r\n      title: \"Created At\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      render: (createdAt) => formatDate(createdAt),\r\n    },\r\n    {\r\n      title: \"Updated At\",\r\n      dataIndex: \"updatedAt\",\r\n      key: \"updatedAt\",\r\n      render: (updatedAt) => formatDate(updatedAt),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 90,\r\n      render: (text, user) => (\r\n        <Space size=\"small\">\r\n          <Link to={\"/admin/manage-user/\" + user.id}>\r\n            <Button size=\"sm\">View</Button>\r\n          </Link>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this user?\"\r\n            onConfirm={() => confirmDelete(user.id)}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button color=\"danger\" size=\"sm\">\r\n              Delete\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const filterCallback = (element) => {\r\n    return (\r\n      element.id.toLowerCase().includes(filter) ||\r\n      element.email.toLowerCase().includes(filter) ||\r\n      element.name.toLowerCase().includes(filter)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Users</h2>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter id or name to find\"\r\n                      id=\"filterName\"\r\n                      value={filter}\r\n                      onChange={(e) => setFilter(e.target.value)}\r\n                    ></Input>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <TableAntd\r\n                columns={columns}\r\n                dataSource={users.filter(filterCallback)}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport { GET_USERS_BY_ID } from \"../../../query/user\";\r\nimport { queryData } from \"../../../common\";\r\n\r\nimport {\r\n  Modal,\r\n  // message,\r\n  // Popconfirm,\r\n  // Select,\r\n  // Tag,\r\n  // Upload,\r\n  // Form as FormAntd,\r\n} from \"antd\";\r\n\r\nexport default function UserDetail() {\r\n  const { userId } = useParams();\r\n  const [user, setUser] = React.useState({ product: [] });\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n\r\n  const fetchData = async () => {\r\n    queryData(GET_USERS_BY_ID, { id: userId }).then(({ data: { user } }) => {\r\n      setUser(user);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onPreview = async () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">User Detail</h2>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <Container fluid>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <div\r\n                      style={{\r\n                        width: 150,\r\n                        height: 150,\r\n                        backgroundImage: user.avatar\r\n                          ? \"url(\" + user.avatar + \")\"\r\n                          : \"\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        backgroundSize: \"cover\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={onPreview}\r\n                    ></div>\r\n                    <Modal\r\n                      title=\"Avatar\"\r\n                      visible={isModalVisible}\r\n                      onOk={false}\r\n                      okText={null}\r\n                      onCancel={onCancel}\r\n                      width={348}\r\n                      footer={null}\r\n                    >\r\n                      {\" \"}\r\n                      <div\r\n                        style={{\r\n                          width: 300,\r\n                          height: 300,\r\n                          backgroundImage: user.avatar\r\n                            ? \"url(\" + user.avatar + \")\"\r\n                            : \"\",\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          backgroundSize: \"cover\",\r\n                        }}\r\n                      ></div>\r\n                    </Modal>\r\n                  </FormGroup>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={6}>\r\n                      <FormGroup>\r\n                        <Label>Name</Label>\r\n                        <Input defaultValue={user.name} disabled />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={6}>\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <Input defaultValue={user.email} disabled />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={6}>\r\n                      <FormGroup>\r\n                        <Label>Gender</Label>\r\n                        <Input\r\n                          defaultValue={user.gender ? \"Nam\" : \"Nữ\"}\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={6}>\r\n                      <FormGroup>\r\n                        <Label>Phone Number</Label>\r\n                        <Input defaultValue={user.phone} disabled />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <FormGroup>\r\n                    <Label>Address</Label>\r\n                    <Input\r\n                      defaultValue={user.address ? user.address : \"\"}\r\n                      disabled\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </Container>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport { Modal, message, Popconfirm, Table as TableAntd, Space } from \"antd\";\r\nimport formatDate from \"../../../utils/index.js\";\r\nimport { queryData, mutateData } from \"../../../common\";\r\nimport {\r\n  GET_CATEGORIES,\r\n  CREATE_CATEGORY,\r\n  UPDATE_CATEGORY,\r\n  DELETE_CATEGORY,\r\n} from \"../../../query/category\";\r\n\r\nexport default function Styles() {\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [modalContent, setModalContent] = React.useState({\r\n    create: false,\r\n    id: \"\",\r\n    name: \"\",\r\n  });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    queryData(GET_CATEGORIES)\r\n      .then(({ data: { categories: dataCategories } }) => {\r\n        console.log(dataCategories);\r\n        setCategories(dataCategories);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDisplay = () => {\r\n    setModalContent({\r\n      create: true,\r\n      id: \"\",\r\n      name: \"\",\r\n    });\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showModal = (style) => () => {\r\n    console.log(style);\r\n\r\n    setIsModalVisible(true);\r\n    setModalContent({\r\n      create: false,\r\n      ...style,\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    setModalContent({ ...modalContent, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    mutateData(CREATE_CATEGORY, { name: modalContent.name })\r\n      .then((res) => {\r\n        console.log(res);\r\n        message.success(\"Create successful.\");\r\n        fetchData();\r\n        setIsModalVisible(false);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"Create failed.\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    mutateData(UPDATE_CATEGORY, {\r\n      id: modalContent.id,\r\n      name: modalContent.name,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        message.success(\"Update successful.\");\r\n        fetchData();\r\n        setIsModalVisible(false);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"Create failed.\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setModalContent({\r\n      create: true,\r\n      id: \"\",\r\n      name: \"\",\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    console.log(isModalVisible);\r\n  }, [isModalVisible]);\r\n\r\n  const confirmDelete = (id) => {\r\n    mutateData(DELETE_CATEGORY, { id: id })\r\n      .then((res) => {\r\n        console.log(res);\r\n        fetchData();\r\n        message.success(\"Delete successful.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        message.error(\"Delete failed.\");\r\n      });\r\n  };\r\n\r\n  const cancel = (e) => {};\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      render: (id) => id.slice(-8),\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Created At\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      render: (createdAt) => formatDate(createdAt),\r\n    },\r\n    {\r\n      title: \"Updated At\",\r\n      dataIndex: \"updatedAt\",\r\n      key: \"updatedAt\",\r\n      render: (updatedAt) => formatDate(updatedAt),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 180,\r\n      render: (text, category) => (\r\n        <Space size=\"small\">\r\n          <Button onClick={showModal(category)} size=\"sm\">\r\n            Update\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this category?\"\r\n            onConfirm={() => confirmDelete(category.id)}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button color=\"danger\" size=\"sm\">\r\n              Delete\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Categories</h2>\r\n                  </div>\r\n                  <div className=\"col text-right\">\r\n                    <Button color=\"primary\" onClick={handleDisplay} size=\"sm\">\r\n                      Create\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <TableAntd columns={columns} dataSource={categories} />\r\n              <Modal\r\n                title={modalContent.create ? \"Create\" : \"Update\"}\r\n                visible={isModalVisible}\r\n                onOk={modalContent.create ? handleCreate : handleUpdate}\r\n                onCancel={handleCancel}\r\n                okText={modalContent.create ? \"Create\" : \"Update\"}\r\n              >\r\n                <Form>\r\n                  {modalContent.create ? null : (\r\n                    <FormGroup>\r\n                      <Label for=\"id\">Id</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        id=\"id\"\r\n                        placeholder=\"\"\r\n                        value={modalContent.id}\r\n                        onChange={handleChange}\r\n                        plaintext={true}\r\n                      />\r\n                    </FormGroup>\r\n                  )}\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Enter name of category\"\r\n                      value={modalContent.name}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </Modal>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Card, CardHeader, Button, Input } from 'reactstrap';\r\nimport { queryData } from '../../../common';\r\nimport { Table as TableAntd, Popconfirm, message, Space, Tag } from 'antd';\r\nimport formatDate from '../../../utils/index.js';\r\nimport { GET_BOOK_NOTIFICATIONS } from '../../../query/notification';\r\n\r\nexport default function NotificationPage() {\r\n  const [notifications, setNotifications] = React.useState([]);\r\n  const [filter, setFilter] = React.useState('');\r\n\r\n  const fetchData = async () => {\r\n    queryData(GET_BOOK_NOTIFICATIONS)\r\n      .then(({ data: { notificationsBookOfAdmin } }) => {\r\n        console.log(notificationsBookOfAdmin);\r\n        setNotifications(notificationsBookOfAdmin);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function cancel(e) {}\r\n  function confirmDelete(id) {\r\n    message.error('Delete failed.');\r\n    // axios\r\n    //   .delete(\"http://localhost:3001/user/delete/\" + id)\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //     message.success(\"Delete successful.\");\r\n    //     fetchData();\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //     message.error(\"Delete failed.\");\r\n    //   });\r\n  }\r\n  const seenTag = {\r\n    ADMIN: 'warning',\r\n    STORE: 'processing',\r\n    MEMBER: 'success',\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (id) => <Link to={'/admin/manage-notification/' + id}>{id.slice(-8)}</Link>,\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n    },\r\n    {\r\n      title: 'Seen',\r\n      dataIndex: 'seen',\r\n      key: 'seen',\r\n      render: (seen) => (\r\n        <Tag color={seen ? 'success' : 'warning'}>{seen ? 'Đã xem' : 'Chưa xem'}</Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Created At',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      render: (createdAt) => formatDate(createdAt),\r\n    },\r\n    {\r\n      title: 'Updated At',\r\n      dataIndex: 'updatedAt',\r\n      key: 'updatedAt',\r\n      render: (updatedAt) => formatDate(updatedAt),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      fixed: 'right',\r\n      width: 45,\r\n      render: (text, notification) => (\r\n        <Space size=\"small\">\r\n          <Link to={'/admin/manage-notification/' + notification.id}>\r\n            <Button size=\"sm\">View</Button>\r\n          </Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  // const filterCallback = (element) => {\r\n  //     return (\r\n  //         element.id.toLowerCase().includes(filter) ||\r\n  //         element.email.toLowerCase().includes(filter) ||\r\n  //         element.name.toLowerCase().includes(filter)\r\n  //     );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Notifications</h2>\r\n                  </div>\r\n                  {/* <div className=\"col\">\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter id or name to find\"\r\n                                            id=\"filterName\"\r\n                                            value={filter}\r\n                                            onChange={(e) =>\r\n                                                setFilter(e.target.value)\r\n                                            }\r\n                                        ></Input>\r\n                                    </div> */}\r\n                </Row>\r\n              </CardHeader>\r\n              <TableAntd columns={columns} dataSource={notifications} />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardHeader,\r\n} from 'reactstrap';\r\nimport { GET_BOOK_NOTIFICATION, SEEN_NOTIFICATION } from '../../../query/notification';\r\nimport { mutateData, queryData } from '../../../common';\r\n\r\nimport {\r\n  message,\r\n  Modal,\r\n  // message,\r\n  // Popconfirm,\r\n  // Select,\r\n  // Tag,\r\n  // Upload,\r\n  // Form as FormAntd,\r\n} from 'antd';\r\nimport Image from './Image';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { CREATE_UNIQUE_BOOK } from 'query/uniqueBook';\r\nimport { UPDATE_UNIQUE_BOOK } from 'query/uniqueBook';\r\n\r\nexport default function NotificationDetail() {\r\n  const { id } = useParams();\r\n  const [notification, setNotification] = React.useState(null);\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n\r\n  const fetchData = async () => {\r\n    queryData(GET_BOOK_NOTIFICATION, { id })\r\n      .then(({ data: { notificationBookOfAdmin } }) => {\r\n        console.log(notificationBookOfAdmin);\r\n        setNotification(notificationBookOfAdmin);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    mutateData(SEEN_NOTIFICATION, { id })\r\n      .then(({ data }) => {\r\n        console.log('success');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [id]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const onCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onPreview = async () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const data = {\r\n      name: notification.data.name,\r\n      images: notification.data.images,\r\n      year: notification.data.year,\r\n      numberOfReprint: notification.data.numberOfReprint,\r\n      publisher: notification.data.publisher,\r\n      author: notification.data.author,\r\n      category: notification.data.category.id,\r\n      description: notification.data.description,\r\n      unsignedName: notification.data.unsignedName,\r\n      author: notification.data.author,\r\n    };\r\n    if (notification.uniqueBook) {\r\n      mutateData(UPDATE_UNIQUE_BOOK, {\r\n        dataUpdate: data,\r\n        id: notification.uniqueBook.id,\r\n      })\r\n        .then(({ data }) => message.success('Cập nhật thành công'))\r\n        .catch((err) => message.error('Cập nhật thất bại'));\r\n    } else {\r\n      mutateData(CREATE_UNIQUE_BOOK, {\r\n        dataCreate: data,\r\n      })\r\n        .then(({ data }) => message.success('Thêm mới thành công'))\r\n        .catch((err) => message.error('Thêm mới thất bại'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-10 mb-10\" fluid>\r\n        <Row className=\"mt-10 mb-10\">\r\n          <Col className=\"mt-4 mb-4 \">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h2 className=\"mb-0\">Notification Detail</h2>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              {notification && (\r\n                <Container fluid>\r\n                  {notification.uniqueBook && (\r\n                    <Row>\r\n                      <Col sm={6} md={6} lg={6}>\r\n                        <h4\r\n                          style={{\r\n                            fontWeight: 'bold',\r\n                            textAlign: 'center',\r\n                          }}\r\n                        >\r\n                          Sách trong DB\r\n                        </h4>\r\n                      </Col>\r\n                      <Col sm={6} md={6} lg={6}>\r\n                        <h4\r\n                          style={{\r\n                            fontWeight: 'bold',\r\n                            textAlign: 'center',\r\n                          }}\r\n                        >\r\n                          Sách mới thêm\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                  <Row>\r\n                    <Col\r\n                      xs={notification.uniqueBook ? '6' : '8'}\r\n                      md={{\r\n                        size: notification.uniqueBook ? 6 : 8,\r\n                        offset: notification.uniqueBook ? 0 : 2,\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col sm={12} md={12} lg={12}>\r\n                          <FormGroup>\r\n                            <Label>Hình ảnh</Label>\r\n                            <div>\r\n                              {notification.data.images.map((image, index) => (\r\n                                <Image imageUrl={image} key={Math.random() * 1000 + ''} />\r\n                              ))}\r\n                            </div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={12}>\r\n                          <FormGroup>\r\n                            <Label>Name</Label>\r\n                            <Input defaultValue={notification.data.name} disabled />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col sm={12} md={12} lg={12}>\r\n                          <FormGroup>\r\n                            <Label>Description</Label>\r\n                            <TextArea\r\n                              autoSize={{\r\n                                minRows: 2,\r\n                                maxRows: 6,\r\n                              }}\r\n                              defaultValue={notification.data.description}\r\n                              disabled\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={12}>\r\n                          <FormGroup>\r\n                            <Label>Category</Label>\r\n                            <Input defaultValue={notification.data.category.name} disabled />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                          <FormGroup>\r\n                            <Label>Author</Label>\r\n                            <Input defaultValue={notification.data.author} disabled />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                          <FormGroup>\r\n                            <Label>Publisher</Label>\r\n                            <Input defaultValue={notification.data.publisher} disabled />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                          <FormGroup>\r\n                            <Label>Year</Label>\r\n                            <Input defaultValue={notification.data.year} disabled />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                          <FormGroup>\r\n                            <Label>Number Of Reprint</Label>\r\n                            <Input defaultValue={notification.data.numberOfReprint} disabled />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    {notification.uniqueBook && (\r\n                      <Col xs=\"6\">\r\n                        <Row>\r\n                          <Col sm={12} md={12} lg={12}>\r\n                            <FormGroup>\r\n                              <Label>Hình ảnh</Label>\r\n                              <div>\r\n                                {notification.uniqueBook.images.map((image, index) => (\r\n                                  <Image imageUrl={image} key={Math.random() * 1000 + ''} />\r\n                                ))}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={12} lg={12}>\r\n                            <FormGroup>\r\n                              <Label>Name</Label>\r\n                              <Input defaultValue={notification.uniqueBook.name} disabled />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={12} lg={12}>\r\n                            <FormGroup>\r\n                              <Label>Description</Label>\r\n                              <TextArea\r\n                                autoSize={{\r\n                                  minRows: 2,\r\n                                  maxRows: 6,\r\n                                }}\r\n                                defaultValue={notification.uniqueBook.description}\r\n                                disabled\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={12} lg={12}>\r\n                            <FormGroup>\r\n                              <Label>Category</Label>\r\n                              <Input\r\n                                defaultValue={notification.uniqueBook.category.name}\r\n                                disabled\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={6} lg={6}>\r\n                            <FormGroup>\r\n                              <Label>Author</Label>\r\n                              <Input defaultValue={notification.uniqueBook.author} disabled />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={6} lg={6}>\r\n                            <FormGroup>\r\n                              <Label>Publisher</Label>\r\n                              <Input defaultValue={notification.uniqueBook.publisher} disabled />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={6} lg={6}>\r\n                            <FormGroup>\r\n                              <Label>Year</Label>\r\n                              <Input defaultValue={notification.uniqueBook.year} disabled />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col sm={12} md={6} lg={6}>\r\n                            <FormGroup>\r\n                              <Label>Number Of Reprint</Label>\r\n                              <Input\r\n                                defaultValue={notification.uniqueBook.numberOfReprint}\r\n                                disabled\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                  <Row>\r\n                    <Col\r\n                      xs={notification.uniqueBook ? '12' : '8'}\r\n                      md={{\r\n                        size: notification.uniqueBook ? 12 : 8,\r\n                        offset: notification.uniqueBook ? 0 : 2,\r\n                      }}\r\n                    >\r\n                      <FormGroup>\r\n                        <Button\r\n                          onClick={() => (window.location.href = '/admin/manage-notification')}\r\n                        >\r\n                          Hủy\r\n                        </Button>\r\n                        <Button onClick={handleClick}>\r\n                          {notification.uniqueBook ? 'Cập nhật' : 'Thêm mới'}\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Sidebar from 'components/Sidebar/Sidebar.js';\r\nimport Notification from '../hooks';\r\nimport routes from 'routes.js';\r\n\r\nclass Admin extends React.Component {\r\n  componentDidUpdate(e) {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    this.refs.mainContent.scrollTop = 0;\r\n  }\r\n  getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === '/admin') {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n            exact={!!prop.exact}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return 'Brand';\r\n  };\r\n  render() {\r\n    console.log(sessionStorage.getItem('isLogged'));\r\n    return sessionStorage.getItem('isLogged') ? (\r\n      <Notification>\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          logo={{\r\n            innerLink: '/admin/manage-product',\r\n            imgSrc: require('assets/img/brand/Dino-cheerful-brand.png'),\r\n            imgAlt: '...',\r\n          }}\r\n        />\r\n        <div className=\"main-content\" ref=\"mainContent\">\r\n          {/* <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          /> */}\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"*\" to=\"/admin/manage-product\" />\r\n          </Switch>\r\n          {/* <Container fluid>\r\n            <AdminFooter />\r\n          </Container> */}\r\n        </div>\r\n      </Notification>\r\n    ) : (\r\n      <Redirect to=\"/auth/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  // UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  // NavItem,\n  // NavLink,\n  // Nav,\n  Container,\n  // Row,\n  // Col,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img\n                alt=\"...\"\n                src={require(\"assets/img/brand/argon-react-white.png\")}\n              />\n            </NavbarBrand>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\n// import AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        {/* <AuthFooter /> */}\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { Client } from './config';\r\n\r\nimport 'assets/plugins/nucleo/css/nucleo.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'assets/scss/argon-dashboard-react.scss';\r\nimport 'assets/quang/quang.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport AdminLayout from 'layouts/Admin.js';\r\nimport AuthLayout from 'layouts/Auth.js';\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={Client}>\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/admin\"\r\n                    render={(props) => <AdminLayout {...props} />}\r\n                />\r\n                <Route\r\n                    path=\"/auth\"\r\n                    render={(props) => <AuthLayout {...props} />}\r\n                />\r\n                <Redirect from=\"/\" to=\"/auth/login\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}